{"version":3,"sources":["ChronoLogNavBar.js","Slider.js","App.js","reportWebVitals.js","index.js"],"names":["ChronoLogNavBar","react_default","a","createElement","Navbar","className","variant","expand","Container","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Divider","TimelineNavigaion","_ref","maxval","setCounter","Slider","aria-label","defaultValue","valueLabelDisplay","onChange","_","value","Math","round","step","sx","width","height","color","min","max","convertToGraph","data","nodes","links","names","matrix","i","length","push","String","name","j","k","source","target","App","_useState","useState","window","innerWidth","_useState2","Object","slicedToArray","displayWidth","setDisplayWidth","_useState3","innerHeight","_useState4","displayHeight","setDisplayHeight","addEventListener","_useState5","_useState6","setData","_useState7","_useState8","counter","getData","fetch","headers","Content-Type","Accept","then","response","json","myJson","res","toConsumableArray","map","useEffect","forceRef","useRef","current","d3Force","strength","x","zoomToFit","document","body","style","backgroundColor","Fragment","src_ChronoLogNavBar","class","src","alt","react_force_graph_module","graphData","nodeLabel","linkCurvature","linkWidth","linkDirectionalParticleWidth","ref","nodeAutoColorBy","src_Slider","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.4cb5e5ef.chunk.js","sourcesContent":["import React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport \"./Navbar.css\";\n\nfunction ChronoLogNavBar() {\n  return (\n    <Navbar className=\"color-nav\" variant=\"dark\" expand=\"lg\">\n      <Container>\n        <Navbar.Brand className=\"nav-brand\" href=\"#home\">\n          ChronoLog.\n        </Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"me-auto\">\n            <Nav.Link className=\"nav-link\" href=\"#home\">\n              About\n            </Nav.Link>\n            <NavDropdown title=\"Library\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/2.1\">\n                Winnie The Pooh\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/2.2\">\n                Little Women\n              </NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/2.3\">\n                Harry Potter and the Philosopher's Stone\n              </NavDropdown.Item>\n            </NavDropdown>\n            <NavDropdown title=\"Developers\" id=\"basic-nav-dropdown\">\n              <NavDropdown.Item href=\"#action/3.1\">GitHub</NavDropdown.Item>\n              <NavDropdown.Item href=\"#action/3.2\">\n                Documentation\n              </NavDropdown.Item>\n              <NavDropdown.Divider />\n              <NavDropdown.Item href=\"#action/3.4\">\n                Separated link\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n        </Navbar.Collapse>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default ChronoLogNavBar;\n","import React from \"react\";\nimport { Slider } from \"@mui/material\";\n\nconst TimelineNavigaion = ({ maxval, setCounter }) => {\n  let scale = 100;\n\n  return (\n    <Slider\n      aria-label=\"Sections\"\n      defaultValue={1}\n      valueLabelDisplay=\"off\"\n      onChange={(_, value) => {\n        setCounter(Math.round(value / scale));\n      }}\n      step={1}\n      sx={{\n        width: 600,\n        height: 20,\n        color: \"#C6AC8F\",\n      }}\n      min={0}\n      max={maxval * scale}\n    />\n  );\n};\nexport default TimelineNavigaion;\n","import React, { useRef, useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport ChronoLogNavBar from \"./ChronoLogNavBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { ForceGraph2D } from \"react-force-graph\";\nimport TimelineNavigaion from \"./Slider\";\n\n// Converts JSON data from backend into graph JSON data for react force graph\nfunction convert(data) {\n  let result = [...data[\"sections\"]];\n  return result.map(convertToGraph);\n}\n\nfunction convertToGraph(data) {\n  let nodes = [];\n  let links = [];\n  let scale = 10;\n  let names = data[\"names\"];\n  let matrix = data[\"matrix\"];\n  for (let i = 0; i < names.length; i++) {\n    nodes.push({ id: \"id\" + String(i), name: names[i] });\n  }\n  for (let j = 0; j < names.length; j++) {\n    for (let k = 0; k < names.length; k++) {\n      if (j !== k && matrix[j][k] !== 0) {\n        links.push({\n          source: \"id\" + String(j),\n          target: \"id\" + String(k),\n          value: matrix[j][k] * scale,\n        });\n      }\n    }\n  }\n  const graph = { nodes: nodes, links: links };\n  return graph;\n}\n\nfunction App() {\n  const [displayWidth, setDisplayWidth] = useState(window.innerWidth);\n  const [displayHeight, setDisplayHeight] = useState(window.innerHeight);\n\n  window.addEventListener(\"resize\", () => {\n    setDisplayWidth(window.innerWidth);\n    setDisplayHeight(window.innerHeight);\n  });\n\n  const [data, setData] = useState({ nodes: {}, links: {} });\n  const [counter, setCounter] = useState(0);\n\n  // Fetches data outputted by the backend\n\n  const getData = () => {\n    fetch(\"winnie_the_pooh_final_analysis.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    })\n      .then(function (response) {\n        return response.json();\n      })\n      .then(function (myJson) {\n        let res = convert(myJson);\n        setData(res);\n      });\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  // Rendering Graph\n\n  const forceRef = useRef(null);\n  let repelStrength = -10;\n  let centering = -120;\n  let zoomingTime = 50;\n  let padding = 130;\n  let widthCentering = 300;\n  let heightCentering = 100;\n\n  useEffect(() => {\n    forceRef.current.d3Force(\"charge\").strength(repelStrength);\n    forceRef.current.d3Force(\"center\").x(centering);\n    forceRef.current.zoomToFit(zoomingTime, padding);\n    document.body.style.backgroundColor = \"#eae0d5\";\n  });\n\n  return (\n    <>\n      <ChronoLogNavBar />\n      <div class=\"chronolog-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center\">\n        <img src=\"../ChronoLogo.png\" class=\"img-fluid\" alt=\"ChronoLogo\" />\n        <div class=\"about-chronolog\">\n          <p>Beautiful data.</p>\n        </div>\n      </div>\n      <div className=\"App\">\n        <ForceGraph2D\n          graphData={data[counter]}\n          nodeLabel=\"name\"\n          linkCurvature=\"curvature\"\n          linkWidth=\"value\"\n          linkDirectionalParticleWidth={1}\n          width={displayWidth - widthCentering}\n          height={displayHeight - heightCentering}\n          ref={forceRef}\n          nodeAutoColorBy={\"name\"}\n        />\n\n        <TimelineNavigaion\n          maxval={data.length - 1}\n          setCounter={setCounter}\n          TimelineNavigaion\n        />\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom/client\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}